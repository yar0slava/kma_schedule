openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8000
  description: Generated server url
paths:
  /records:
    get:
      tags:
      - record-controller
      operationId: getAll
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Record'
    put:
      tags:
      - record-controller
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Record'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
    post:
      tags:
      - record-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Record'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "201":
          description: Created
  /lectors:
    get:
      tags:
      - lecturer-controller
      operationId: getAll_1
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LecturerDto'
    put:
      tags:
      - lecturer-controller
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LecturerDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
    post:
      tags:
      - lecturer-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LecturerDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "201":
          description: Created
  /disciplines:
    get:
      tags:
      - discipline-controller
      operationId: getAll_2
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisciplineDto'
    put:
      tags:
      - discipline-controller
      operationId: update_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisciplineDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
    post:
      tags:
      - discipline-controller
      operationId: createNewDiscipline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisciplineDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "201":
          description: Created
  /admin:
    get:
      tags:
      - admin-controller
      operationId: getAdminPage
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
      - admin-controller
      operationId: createNewClassroom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassroomDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "201":
          description: Created
  /records/{id}:
    get:
      tags:
      - record-controller
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Record'
    delete:
      tags:
      - record-controller
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
  /lectors/{id}:
    get:
      tags:
      - lecturer-controller
      operationId: get_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LecturerDto'
    delete:
      tags:
      - lecturer-controller
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
  /disciplines/{id}:
    get:
      tags:
      - discipline-controller
      operationId: get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DisciplineDto'
    delete:
      tags:
      - discipline-controller
      operationId: delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
  /:
    get:
      tags:
      - main-controller
      operationId: getMapping
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    ClassTime:
      type: object
      properties:
        classTimeId:
          type: integer
          format: int32
        classDate:
          type: string
          format: date
        classTime:
          $ref: '#/components/schemas/LocalTime'
        weekNumber:
          type: integer
          format: int32
    Classroom:
      type: object
      properties:
        classroomId:
          type: integer
          format: int32
        name:
          type: string
        capacity:
          type: integer
          format: int32
    Discipline:
      required:
      - disciplineId
      - name
      type: object
      properties:
        disciplineId:
          maximum: 6
          minimum: 6
          type: integer
          format: int32
        name:
          maxLength: 150
          minLength: 5
          type: string
        lecturer:
          $ref: '#/components/schemas/Lecturer'
    Group:
      type: object
      properties:
        groupId:
          type: string
        isLecture:
          type: boolean
        amount:
          type: integer
          format: int32
        specialization:
          type: string
        degree:
          type: string
        lecturer:
          $ref: '#/components/schemas/Lecturer'
    Lecturer:
      required:
      - lecturerId
      - name
      type: object
      properties:
        lecturerId:
          maximum: 6
          minimum: 6
          type: integer
          format: int32
        name:
          type: string
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    Record:
      required:
      - classTime
      - classroom
      - discipline
      - group
      - id
      - lecturer
      type: object
      properties:
        id:
          maximum: 6
          minimum: 6
          type: integer
          format: int32
        discipline:
          $ref: '#/components/schemas/Discipline'
        classTime:
          $ref: '#/components/schemas/ClassTime'
        group:
          $ref: '#/components/schemas/Group'
        classroom:
          $ref: '#/components/schemas/Classroom'
        lecturer:
          $ref: '#/components/schemas/Lecturer'
    LecturerDto:
      type: object
    DisciplineDto:
      type: object
      properties:
        disciplineId:
          type: integer
          format: int32
        name:
          type: string
        lecturer:
          $ref: '#/components/schemas/LecturerDto'
    ClassroomDto:
      type: object
      properties:
        name:
          type: string
        capacity:
          type: integer
          format: int32
        adminLogin:
          type: string
